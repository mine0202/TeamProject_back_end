server.port=8000

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#\uD074\uB77C\uC6B0\uB4DC DB \uC811\uC18D \uD1A0\uD070
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@XE_high?TNS_ADMIN=D:/DSHRD/10_teamProject/0110-final/back-end/Wallet_XE

#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@XE_high?TNS_ADMIN=/home/opc/work/Wallet_XE
spring.datasource.username=project
spring.datasource.password=Playground123

#\uB85C\uCEEC DB(Docker) \uC811\uC18D \uD1A0\uD070
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
#spring.datasource.username=scott
#spring.datasource.password=TIGER


# HikariCP settings
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1
spring.datasource.hikari.poolName=HikariPoolBooks

spring.devtools.restart.enabled=true

spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.format_sql=true

spring.sql.init.continue-on-error=true
spring.sql.init.mode=always

# \uD30C\uC77C \uC5C5\uB85C\uB4DC \uC6A9\uB7C9 \uC81C\uD55C
# \uAE30\uBCF8 \uC5C5\uB85C\uB4DC \uC81C\uD55C : 1MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

logging.level.org.hibernate=info
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

# JWT setting
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000

# Google simple login setting
spring.security.oauth2.client.registration.google.clientId=79911811939-4t8g6st7976duk5efe5nh0bqef7g5t0j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=email, profile

# Naver simple login setting
spring.security.oauth2.client.registration.naver.clientId=BQSgkkLs_fXBXYUVnUhP
spring.security.oauth2.client.registration.naver.clientSecret=hVo6fPDy9y
#spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:8000/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.redirect_uri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.naver.scope=email, profile, birthyear, birthday, mobile, name
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver

# Kakao simple login setting
#spring.security.oauth2.client.registration.kakao.clientId=f8af1290310870e2baa8285aad0d970c
#spring.security.oauth2.client.registration.kakao.clientSecret=TsxNwaX0CI545N88V6npCaef4aTmm2vw
#spring.security.oauth2.client.registration.kakao.clientAuthenticationMethod=post
#spring.security.oauth2.client.registration.kakao.authorizationGrantType=authorization_code
#spring.security.oauth2.client.registration.kakao.redirectUri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email
#spring.security.oauth2.client.registration.kakao.clientName=Kakao

# Naver provider register
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao provider register
#spring.security.oauth2.client.provider.kakao.authorizationUri=https://kauth.kakao.com/oauth/authorize
#spring.security.oauth2.client.provider.kakao.tokenUri=https://kauth.kakao.com/oauth/token
#spring.security.oauth2.client.provider.kakao.userInfoUri=https://kapi.kakao.com/v2/user/me
#spring.security.oauth2.client.provider.kakao.userNameAttribute=id